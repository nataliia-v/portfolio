/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: CR4YCR4Y (https://sketchfab.com/CR4YCR4Y)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/programmer-cr4y-d64e933c6ea04cb6887007223dadf9b9
Title: Programmer CR4Y
*/

import { useRef, useEffect } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame, useThree } from '@react-three/fiber';
import { a } from '@react-spring/three';

import programmerScene from '../assets/3d/programmer_cr4y.glb';

const Programmer = props => {
  const progremmerRef = useRef();
  const { nodes, materials } = useGLTF(programmerScene);

  return (
    <a.group ref={progremmerRef} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, Math.PI]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.Object_4.geometry} material={materials.Crayfish_Eye} />
          <mesh geometry={nodes.Object_5.geometry} material={materials.Crayfish_Flesh} />
          <mesh geometry={nodes.Object_6.geometry} material={materials.Crayfish_Shell} />
          <mesh geometry={nodes.Object_7.geometry} material={materials.Sock_Blue} />
          <mesh geometry={nodes.Object_8.geometry} material={materials.Sock_Pink} />
          <mesh geometry={nodes.Object_9.geometry} material={materials.Sock_White} />
          <mesh geometry={nodes.Object_11.geometry} material={materials.Keyboard_Glow_Blue} />
          <mesh geometry={nodes.Object_12.geometry} material={materials.Keyboard_Glow_Pink} />
          <mesh geometry={nodes.Object_13.geometry} material={materials.Keyboard_Glow_White} />
          <mesh geometry={nodes.Object_14.geometry} material={materials.L4PT0P_auv} />
          <mesh geometry={nodes.Object_15.geometry} material={materials.Laptop_Gloss_Black} />
          <mesh geometry={nodes.Object_16.geometry} material={materials.Laptop_Grey} />
          <mesh geometry={nodes.Object_17.geometry} material={materials.Laptop_Shell} />
        </group>
      </group>
    </a.group>
  );
};

useGLTF.preload('/programmer_cr4y.glb');

export default Programmer;
